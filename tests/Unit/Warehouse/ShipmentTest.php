<?php


namespace Tests\Unit\Warehouse;


use App\Warehouse\Domain\Orders\OrderedItemFactory;
use App\Warehouse\Domain\Orders\OrderFactory;
use App\Warehouse\Domain\Services\ReviewRequestSenderServiceInterface;
use App\Warehouse\Domain\Shipments\Shipment;
use App\Warehouse\Domain\Shipments\TrackAndTrace;
use Carbon\CarbonImmutable;
use Tests\Feature\Warehouse\DummyPackingSlipGenerator;
use Tests\Feature\Warehouse\DummyReviewRequestSenderService;
use Tests\TestCase;

class ShipmentTest extends TestCase
{
    private DummyPackingSlipGenerator $pickupReportGenerator;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->pickupReportGenerator = new DummyPackingSlipGenerator();
        $this->app->bind(ReviewRequestSenderServiceInterface::class, DummyReviewRequestSenderService::class);

    }

    /** @test */
    public function it_should_have_correct_attributes()
    {
        // Given
        $reference = "Shipment Reference";
        $order = OrderFactory::constantUnprocessed();
        $trackAndTrace = new TrackAndTrace('T&T 123', 't-t-123');
        $shippingExplanation = "Uitleg van transporteur";
        $deliveryDate = CarbonImmutable::createFromDate(2022, 1, 1);
        $deliveryMethod = "Briefpost";
        $carrierName = "PostNl";
        $orderedItems = OrderedItemFactory::multipleRandom(5);
        $picklistId = "12345-12345";
        $mailerService = new DummyMailerService();
        $trackAndTraceMailSent = true;
        $noReview = false;

        // When
        $shipment = new Shipment($reference, $order->reference(), $trackAndTrace, $deliveryMethod, $carrierName, $orderedItems, $picklistId, $this->pickupReportGenerator, $mailerService, $trackAndTraceMailSent, $deliveryDate, $shippingExplanation, $noReview);

        // Then
        self::assertEquals($order->reference(), $shipment->orderReference());
        self::assertEquals($trackAndTrace, $shipment->trackAndTrace());
        self::assertEquals($trackAndTraceMailSent, $shipment->trackAndTraceMailSent());
        self::assertEquals($deliveryDate, $shipment->deliveryDate());
        self::assertEquals($shippingExplanation, $shipment->shippingExplanation());
        self::assertEquals($deliveryMethod, $shipment->deliveryMethod());
        self::assertEquals($carrierName, $shipment->carrierName());
        self::assertEquals($orderedItems, $shipment->orderedItems());
        self::assertEquals($picklistId, $shipment->picklistId());
    }

}
