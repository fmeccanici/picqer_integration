<?php


namespace Tests\Unit\Warehouse\Infrastructure\Persistence\MsSql\Repositories;


use App\Warehouse\Domain\Orders\DeliveryOption;
use App\Warehouse\Domain\Services\DeliveryOptionServiceInterface;
use App\Warehouse\Domain\Services\ReviewRequestSenderServiceInterface;
use App\Warehouse\Infrastructure\Persistence\MsSql\Repositories\MsSqlOrderRepository;
use App\Warehouse\Infrastructure\Services\DeliveryOptionService;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Mockery;
use Tests\Feature\Warehouse\DummyReviewRequestSenderService;
use Tests\TestCase;

// TODO: Mock DB facade such that tests run faster
class MsSqlOrderRepositoryTest extends TestCase
{
    use DatabaseMigrations;

    private \App\Warehouse\Domain\Orders\Order $order;
    private MsSqlOrderRepository $orderRepository;
    private string $reference;
    private string $splitOrderReference;
    private DeliveryOption $deliveryOption;
    private DeliveryOptionServiceInterface $deliveryOptionServiceMock;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        // TODO: Make add method on repository working, such that we do not have to hardcode the reference here
        $this->reference = "120106722";
        $this->splitOrderReference = "120447869";

        $this->deliveryOption  = new DeliveryOption("PostNL", "PostNL - Pakket", 3085, 118, 006);

        $this->deliveryOptionServiceMock = $this->createMock(DeliveryOptionServiceInterface::class);
        $this->deliveryOptionServiceMock->method('getDeliveryOption')
            ->willReturn($this->deliveryOption);

        $this->artisan('db:seed --class=DeliveryOptionsSeeder');
        $this->app->bind(ReviewRequestSenderServiceInterface::class, DummyReviewRequestSenderService::class);

    }

    /** @test */
    public function it_should_return_an_order_with_customer()
    {
        // Given
        // TODO: Feature 18492: Factories Make MsSqlOrder class with public attributes instead of json_decode and then encode
        $msSqlOrder = json_decode(json_encode([
            "SalesOrderShipmentId" => "6924",
            "SalesOrderId" => "6924",
            "SalesOrderNumber" => "120106722",
            "SalesOrderCreatedDate" => "2012-11-12 00:00:00.000",
            "CustomerNumber" => "5395",
            "CustomerContactPerson" => "",
            "CustomerName" => "Simone snel",
            "CustomerEmail" => "Simonesnel@hotmail.com",
            "CustomerPhone" => "0624688767",
            "CustomerMobilePhone" => "",
            "BillingAddressLine" => "Dijkshoornseweg 187",
            "BillingPostalCode" => "2614kc",
            "BillingCity" => "Delft",
            "BillingCountry" => "Belgie",
            "DeliveryContactPerson" => "",
            "DeliveryName" => "Simone snel",
            "DeliveryAddressLine" => "Dijkshoornseweg 187",
            "DeliveryPostalCode" => "2614kc",
            "DeliveryCity" => "Delft",
            "DeliveryCountry" => "Belgie",
            "HasNotes" => "0",
            "SalesOrderInfoId" => "19433",
            "IsSalesOrderCancelled" => "0",
            "State" => "18",
            "EarliestDeliveryDate" => null,
            "RequestedDeliveryDate" => null,
            "ActualDeliveryDate" => "2012-11-16 00:00:00.000",
            "IsTakeAway" => "0",
            "BrandNames" => null,
            "Remarks" => 'Test remarks',
            "TrackAndTrace" => "3SYUDM001002966",
            "DeliveryService" => "PostNL - Pakket",
            "DeliveryCompany" => "PostNL",
            "ShipmentId" => null,
            "ShipmentNumber" => null,
            "ShipmentState" => null,
            "ShipmentEarliestDeliveryDate" => null,
            "ShipmentRequestedDeliveryDate" => null,
            "ShipmentActualDeliveryDate" => null,
            "ShipmentIsTakeAway" => null,
            "ShipmentBrandNames" => null,
            "ShipmentRemarks" => null,
            "ShipmentTrackAndTrace" => null,
            "ShipmentDeliveryService" => null,
            "ShipmentDeliveryCompany" => null,
            "NoReview" => null,
            "ShipmentNoReview" => null
        ]));

        $msSqlSalesOrderRows = json_decode(json_encode([
            0 => [
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "1",
                "ProductCode" => "5055006761542",
                'ProductGroup' => 'ready-mix',
                "Description" => "
                  Matte lak - Matt Finish White Poetry\r\n
                  Historical White (00)\r\n
                  \r\n
                  Productnr: 00\r\n
                  750 ml blik\r\n
                  Uit voorraad: Ja\r\n
                  ",
                "Quantity" => "1.0000",
            ],
            1 => [#358
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "3",
                "ProductCode" => null,
                'ProductGroup' => 'ready-mix',
                "Description" => "Gewenste leverdatum/afhaaldatum: 13-11-2012",
                "Quantity" => ".0000"
            ],
            2 => [
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "5",
                "ProductCode" => "VERZEND",
                'ProductGroup' => 'ready-mix',
                "Description" => "De bestelling naar mijn adres verzenden (Geleverd door TNT, PostNL of UPS)",
                "Quantity" => "1.0000",
            ],
            3 => [#375
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "2",
                "ProductCode" => "8712967096454",
                'ProductGroup' => 'ready-mix',
                "Description" => ",
                  Painting The Past Extra Kwasten en rollers\r\n
                  Luxe kwast 4,5 cm\r\n
                  \r\n
                  Productnr: Luxe kwast 4,5 cm\r\n
                  Uit voorraad: Nee\r\n
                  ",
                "Quantity" => "1.0000",
            ],
            4 => ["SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "4",
                "ProductCode" => null,
                'ProductGroup' => 'ready-mix',
                "Description" => "Uw bestelling is succesvol verzonden. U hebt uw order betaald middels PayPal.",
                "Quantity" => ".0000",
            ]
        ]));

        $msSqlDeliveryOptions = '{"DeliveryOption":{"Name":"PostNL","Options":{"Location":"Jumbo (3125) Leiden (Diamantplein 55 2332HT Leiden)","DeliveryOption":"Normaal","LocationCode":"206190","RetailNetworkId":"PNPNL-01"}}}';

        $orderRepositoryMock = Mockery::mock(MsSqlOrderRepository::class, [$this->deliveryOptionServiceMock])
            ->shouldAllowMockingProtectedMethods()
            ->makePartial();

        $orderRepositoryMock->shouldReceive('getMsSqlOrders')
            ->once()
            ->andReturn([
                $msSqlOrder
            ]);

        $orderRepositoryMock->shouldReceive('getMsSqlDeliveryOptions')
            ->once()
            ->andReturn($msSqlDeliveryOptions);

        $orderRepositoryMock->shouldReceive('getMsSqlOrderRows')
            ->once()
            ->andReturn($msSqlSalesOrderRows);

        $reference = $this->reference;

        // When
        $foundOrder = $orderRepositoryMock->findOneByReference($reference);

        // Then
        self::assertNotNull($foundOrder->customer());
    }

    /** @test */
    public function it_should_return_an_order_with_delivery_option() {

        $msSqlOrder = json_decode(json_encode([
            "SalesOrderShipmentId" => "6924",
            "SalesOrderId" => "6924",
            "SalesOrderNumber" => "120106722",
            "SalesOrderCreatedDate" => "2012-11-12 00:00:00.000",
            "CustomerNumber" => "5395",
            "CustomerContactPerson" => "",
            "CustomerName" => "Simone snel",
            "CustomerEmail" => "Simonesnel@hotmail.com",
            "CustomerPhone" => "0624688767",
            "CustomerMobilePhone" => "",
            "BillingAddressLine" => "Dijkshoornseweg 187",
            "BillingPostalCode" => "2614kc",
            "BillingCity" => "Delft",
            "BillingCountry" => "Belgie",
            "DeliveryContactPerson" => "",
            "DeliveryName" => "Simone snel",
            "DeliveryAddressLine" => "Dijkshoornseweg 187",
            "DeliveryPostalCode" => "2614kc",
            "DeliveryCity" => "Delft",
            "DeliveryCountry" => "Belgie",
            "HasNotes" => "0",
            "SalesOrderInfoId" => "19433",
            "IsSalesOrderCancelled" => "0",
            "State" => "18",
            "EarliestDeliveryDate" => null,
            "RequestedDeliveryDate" => null,
            "ActualDeliveryDate" => "2012-11-16 00:00:00.000",
            "IsTakeAway" => "0",
            "BrandNames" => null,
            "Remarks" => 'Test remarks',
            "TrackAndTrace" => "3SYUDM001002966",
            "DeliveryService" => "PostNL - Pakket",
            "DeliveryCompany" => "PostNL",
            "ShipmentId" => null,
            "ShipmentNumber" => null,
            "ShipmentState" => null,
            "ShipmentEarliestDeliveryDate" => null,
            "ShipmentRequestedDeliveryDate" => null,
            "ShipmentActualDeliveryDate" => null,
            "ShipmentIsTakeAway" => null,
            "ShipmentBrandNames" => null,
            "ShipmentRemarks" => null,
            "ShipmentTrackAndTrace" => null,
            "ShipmentDeliveryService" => null,
            "ShipmentDeliveryCompany" => null,
            "NoReview" => null,
            "ShipmentNoReview" => null
        ]));

        $msSqlSalesOrderRows = json_decode(json_encode([
            0 => [
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "1",
                "ProductCode" => "5055006761542",
                'ProductGroup' => 'ready-mix',
                "Description" => "
                  Matte lak - Matt Finish White Poetry\r\n
                  Historical White (00)\r\n
                  \r\n
                  Productnr: 00\r\n
                  750 ml blik\r\n
                  Uit voorraad: Ja\r\n
                  ",
                "Quantity" => "1.0000",
            ],
            1 => [#358
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "3",
                "ProductCode" => null,
                'ProductGroup' => 'ready-mix',
                "Description" => "Gewenste leverdatum/afhaaldatum: 13-11-2012",
                "Quantity" => ".0000"
            ],
            2 => [
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "5",
                "ProductCode" => "VERZEND",
                'ProductGroup' => 'ready-mix',
                "Description" => "De bestelling naar mijn adres verzenden (Geleverd door TNT, PostNL of UPS)",
                "Quantity" => "1.0000",
            ],
            3 => [#375
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "2",
                "ProductCode" => "8712967096454",
                'ProductGroup' => 'ready-mix',
                "Description" => ",
                  Painting The Past Extra Kwasten en rollers\r\n
                  Luxe kwast 4,5 cm\r\n
                  \r\n
                  Productnr: Luxe kwast 4,5 cm\r\n
                  Uit voorraad: Nee\r\n
                  ",
                "Quantity" => "1.0000",
            ],
            4 => ["SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "4",
                "ProductCode" => null,
                'ProductGroup' => 'ready-mix',
                "Description" => "Uw bestelling is succesvol verzonden. U hebt uw order betaald middels PayPal.",
                "Quantity" => ".0000",
            ]
        ]));

        $msSqlDeliveryOptions = '{"DeliveryOption":{"Name":"PostNL","Options":{"Location":"Jumbo (3125) Leiden (Diamantplein 55 2332HT Leiden)","DeliveryOption":"Normaal","LocationCode":"206190","RetailNetworkId":"PNPNL-01"}}}';

        $orderRepositoryMock = Mockery::mock(MsSqlOrderRepository::class, [$this->deliveryOptionServiceMock])
            ->shouldAllowMockingProtectedMethods()
            ->makePartial();

        $orderRepositoryMock->shouldReceive('getMsSqlOrders')
            ->once()
            ->andReturn([
                $msSqlOrder
            ]);

        $orderRepositoryMock->shouldReceive('getMsSqlDeliveryOptions')
            ->once()
            ->andReturn($msSqlDeliveryOptions);

        $orderRepositoryMock->shouldReceive('getMsSqlOrderRows')
            ->once()
            ->andReturn($msSqlSalesOrderRows);

        // Given
        $reference = $this->reference;

        // When
        $foundOrder = $orderRepositoryMock->findOneByReference($reference);

        // Then
        self::assertNotNull($foundOrder->deliveryOption());
    }

    /** @test */
    public function it_should_return_an_order_with_delivery_option_pickup_point_belgium()
    {
        // Given
        $salesOrderNumber = 120106722;
        $newSalesOrderNumbers = array($salesOrderNumber);

        $msSqlOrder = json_decode(json_encode([
            "SalesOrderShipmentId" => "6924",
            "SalesOrderId" => "6924",
            "SalesOrderNumber" => $salesOrderNumber,
            "SalesOrderCreatedDate" => "2012-11-12 00:00:00.000",
            "CustomerNumber" => "5395",
            "CustomerContactPerson" => "",
            "CustomerName" => "Simone snel",
            "CustomerEmail" => "Simonesnel@hotmail.com",
            "CustomerPhone" => "0624688767",
            "CustomerMobilePhone" => "",
            "BillingAddressLine" => "Dijkshoornseweg 187",
            "BillingPostalCode" => "2614kc",
            "BillingCity" => "Delft",
            "BillingCountry" => "Nederland",
            "DeliveryContactPerson" => "",
            "DeliveryName" => "Belgium Oro Nails",
            "DeliveryAddressLine" => "Nijverheidsstraat 72",
            "DeliveryPostalCode" => "2160",
            "DeliveryCity" => "Wommelgem",
            "DeliveryCountry" => "Belgie",
            "HasNotes" => "0",
            "SalesOrderInfoId" => "19433",
            "IsSalesOrderCancelled" => "0",
            "State" => "18",
            "EarliestDeliveryDate" => null,
            "RequestedDeliveryDate" => null,
            "ActualDeliveryDate" => "2012-11-16 00:00:00.000",
            "IsTakeAway" => "0",
            "BrandNames" => null,
            "Remarks" => 'Test remarks',
            "TrackAndTrace" => "3SYUDM001002966",
            "DeliveryService" => 'PostNL - Afhaalpunt',
            "DeliveryCompany" => "PostNL",
            "ShipmentId" => null,
            "ShipmentNumber" => null,
            "ShipmentState" => null,
            "ShipmentEarliestDeliveryDate" => null,
            "ShipmentRequestedDeliveryDate" => null,
            "ShipmentActualDeliveryDate" => null,
            "ShipmentIsTakeAway" => null,
            "ShipmentBrandNames" => null,
            "ShipmentRemarks" => null,
            "ShipmentTrackAndTrace" => null,
            "ShipmentDeliveryService" => null,
            "ShipmentDeliveryCompany" => null,
            "NoReview" => null,
            "ShipmentNoReview" => null
        ]));

        $msSqlSalesOrderRows = json_decode(json_encode([
            0 => [
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "1",
                "ProductCode" => "5055006761542",
                'ProductGroup' => 'ready-mix',
                "Description" => "
                  Matte lak - Matt Finish White Poetry\r\n
                  Historical White (00)\r\n
                  \r\n
                  Productnr: 00\r\n
                  750 ml blik\r\n
                  Uit voorraad: Ja\r\n
                  ",
                "Quantity" => "1.0000",
            ],
            1 => [#358
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => $salesOrderNumber,
                "ShipmentNumber" => null,
                "RowNumber" => "3",
                "ProductCode" => null,
                'ProductGroup' => 'ready-mix',
                "Description" => "Gewenste leverdatum/afhaaldatum: 13-11-2012",
                "Quantity" => ".0000"
            ],
            2 => [
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => $salesOrderNumber,
                "ShipmentNumber" => null,
                "RowNumber" => "5",
                "ProductCode" => "VERZEND",
                'ProductGroup' => 'ready-mix',
                "Description" => "De bestelling naar mijn adres verzenden (Geleverd door TNT, PostNL of UPS)",
                "Quantity" => "1.0000",
            ],
            3 => [#375
                "SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => "120106722",
                "ShipmentNumber" => null,
                "RowNumber" => "2",
                "ProductCode" => "8712967096454",
                'ProductGroup' => 'ready-mix',
                "Description" => ",
                  Painting The Past Extra Kwasten en rollers\r\n
                  Luxe kwast 4,5 cm\r\n
                  \r\n
                  Productnr: Luxe kwast 4,5 cm\r\n
                  Uit voorraad: Nee\r\n
                  ",
                "Quantity" => "1.0000",
            ],
            4 => ["SalesOrderShipmentId" => "6924",
                "SalesOrderId" => "6924",
                "ShipmentId" => null,
                "SalesOrderNumber" => $salesOrderNumber,
                "ShipmentNumber" => null,
                "RowNumber" => "4",
                "ProductCode" => null,
                'ProductGroup' => 'ready-mix',
                "Description" => "Uw bestelling is succesvol verzonden. U hebt uw order betaald middels PayPal.",
                "Quantity" => ".0000",
            ]
        ]));

        $msSqlDeliveryOptions = '{"DeliveryOption":{"Name":"PostNL","Options":{"Location":"Belgium Oro Nails (Nijverheidsstraat 72 2160 Wommelgem)","DeliveryOption":"Normaal","LocationCode":"217776","RetailNetworkId":"PNPBE-01"}}}';

        $orderRepositoryMock = Mockery::mock(MsSqlOrderRepository::class, [new DeliveryOptionService()])
            ->shouldAllowMockingProtectedMethods()
            ->makePartial();

        $orderRepositoryMock->shouldReceive('getMsSqlOrders')
            ->once()
            ->andReturn([
                $msSqlOrder
            ]);

        $orderRepositoryMock->shouldReceive('getMsSqlDeliveryOptions')
            ->once()
            ->andReturn($msSqlDeliveryOptions);

        $orderRepositoryMock->shouldReceive('getMsSqlOrderRows')
            ->once()
            ->andReturn($msSqlSalesOrderRows);

        $orderRepositoryMock->shouldReceive('getNewSalesOrderNumbers')
            ->once()
            ->andReturn(collect($newSalesOrderNumbers));

        // When
        $newOrder = $orderRepositoryMock->findNewOrders()->first();

        // Then
        self::assertTrue($newOrder->deliveryOption()->isPickupLocationBelgium());
    }
}
